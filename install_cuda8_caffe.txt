it is for my PC of Thinkpad P51

1.install cuda
refer to
  https://blog.csdn.net/yhaolpz/article/details/71375762

-1.change the OS setting from the setup screen (key ENTER when you turn on the PC)
BOOT -> clear boot xxxx

0.install the nvidia driver from
system setting -> softupdate -> addional driver -> nvidia driver...
we must remember the dirver version 384.17 or other. it is related to select the wright cuda verion. in our case, it might be cuda 9.0

1. install basic deps
sudo apt-get install libprotobuf-dev libleveldb-dev libsnappy-dev libopencv-dev libhdf5-serial-dev protobuf-compiler
sudo apt-get install --no-install-recommends libboost-all-dev
sudo apt-get install libopenblas-dev liblapack-dev libatlas-base-dev
sudo apt-get install libgflags-dev libgoogle-glog-dev liblmdb-dev
sudo apt-get install git cmake build-essential

2. install & update ubuntu kernel(core)
sudo apt-get update
sudo apt-get dist-upgrade -y
sudo apt-get install linux-image-extra-virtual
sudo apt-get install linux-source

3.disable nouveau
sudo gedit /etc/modprobe.d/blacklist-nouveau.conf
#add the text in to file & save
blacklist nouveau option nouveau modeset=0 
#active the new setting of disable nouveau
sudo update-initramfs -u

4.update environment setting
sudo gedit ~/.bashrc
#add the text in to file & save
export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH 
#active the new setting
source ~/.bashrc

5.install cuda8.0
#down load runtime file from https://developer.nvidia.com/cuda-downloads.
#notice: select the old version of 8.0. not the new verison that is higher than 9.2
#type the keyboard & log in usieng DOS feature
Ctrl + Alt + F1
#disable the GUI, because the graph GUI is using GPU
sudo service lightdm stop
#run the cuda8 file which is just download.
#notice: the file name may not the same
#notice: we donot want to install opengl
sudo sh cuda_8.0.61_375.26_linux.run --no-opengl-libs
#after the long long loooooooooooooong text. 
accept
n (we install the nvida gpu driver from the setting, so donot install driver here)
y or enter (for last all)
#it finishs soon
reboot

6.update environment setting
sudo gedit ~/.bashrc
#add the text in to file & save
export PATH=/usr/local/cuda-8.0/bin:$PATH
export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH
#active the new setting
source ~/.bashrc

7.Test cuda using its sample
cd /usr/local/cuda-8.0/samples/1_Utilities/deviceQuery
sudo make
./deviceQuery






1.install caffe
# in roof
git clone https://github.com/BVLC/caffe.git
cd ./caffe
sudo cp Makefile.config.example Makefile.config
#change Makefile.config setting
sudo gedit Makefile.config
from
#USE_CUDNN := 1
#OPENCV_VERSION := 3 
#WITH_PYTHON_LAYER := 1 
INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/include
LIBRARY_DIRS := $(PYTHON_LIB) /usr/local/lib /usr/lib 
to 
USE_CUDNN := 1
OPENCV_VERSION := 3
WITH_PYTHON_LAYER := 1
INCLUDE_DIRS := $(PYTHON_INCLUDE) /usr/local/include /usr/include/hdf5/serial
LIBRARY_DIRS := $(PYTHON_LIB) /usr/local/lib /usr/lib /usr/lib/x86_64-linux-gnu /usr/lib/x86_64-linux-gnu/hdf5/serial  
#change Makefile setting
gedit Makefile.txt
from
NVCCFLAGS +=-ccbin=$(CXX) -Xcompiler-fPIC $(COMMON_FLAGS)
NVCCFLAGS +=-ccbin=$(CXX) -Xcompiler-fPIC $(COMMON_FLAGS)
NVCCFLAGS += -D_FORCE_INLINES -ccbin=$(CXX) -Xcompiler -fPIC $(COMMON_FLAGS)
to
NVCCFLAGS += -D_FORCE_INLINES -ccbin=$(CXX) -Xcompiler -fPIC $(COMMON_FLAGS)
#change .h file setting
cd /usr/local/cuda/include
sudo gedit host_config.h 
from
#error-- unsupported GNU version! gcc versions later than 4.9 are not supported!
to
//#error-- unsupported GNU version! gcc versions later than 4.9 are not supported!
#make
cd
cd ./caffe
make all -j8
sudo make runtest -j8
# error while loading shared libraries: libcudart.so.8.0: cannot open shared object file: No such file or directory
sudo ldconfig /usr/local/cuda/lib64
sudo make runtest -j8



